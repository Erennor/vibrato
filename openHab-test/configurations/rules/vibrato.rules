import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import socket.*

rule "Vibrato request"
	when
		Item VibratoListener received command
	then
		logInfo("rule vibrato","DEBUGGGGG: vibratoListener a reçu " + receivedCommand)
		if(receivedCommand == "OFF"){
			logInfo("rule vibrato","vibrato set OFF")
			postUpdate(Vibrato,OFF)}
		else if(receivedCommand == "ON"){
			logInfo("rule vibrato","vibrato set ON")
			postUpdate(Vibrato,ON)}
		else if(Vibrato.state == ON){
			logInfo("rule vibrato","vibrato: command " + receivedCommand +" received")	
			sendCommand("VibratoTalk",receivedCommand.toString())
			}
		else
			logInfo("rule vibrato","vibrato: command " + receivedCommand +" received but not treated: Vibrato off")	
end

rule "Vibrato status updater"
	when 
		Item Vibrato received command
	then
		logInfo("rule vibrato","vibrato a reçu " + receivedCommand)
end


rule "hit treatment"
	when 
		Item scriptListener received command
	then
	 	logIngo("scriptListener a recu une commande " + receivedCommand)

		var String cmd = transform("MAP","hiHandler.map",receivedCommand)
		var String cmdStateRule = cmd.splitByWholeSeparator(":").get(1) 
		var String cmdItem = cmd.splitByWholeSeparator(":").get(0) 
		// switch(cmdStateRule)
		case "SWITCH")

		sendCommand(cmdStateRule, cmdItem)
end